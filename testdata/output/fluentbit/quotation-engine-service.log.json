[
  {
    "logId": "qes-1",
    "business_identifiers": "-",
    "class": "org.apache.zookeeper.ZooKeeper",
    "container": "fake-container",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "original_log": "[2024-06-17T15:58:02.219][INFO ] [request_id=-              ] [logId=qes-1] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.apache.zookeeper.ZooKeeper                              ] [method=logEnv                        ] Client environment:java.library.path=/usr/lib/jvm/java-17-openjdk/lib/server:/usr/lib/jvm/java-17-openjdk/lib:/usr/lib/jvm/java-17-openjdk/../lib:/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib",
    "method": "logEnv",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "originating_bi_id": "-",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:58:02.219007468Z",
    "traceId": "-",
    "version": "v1",
    "date": "2024-06-17T15:58:02.219",
    "source_level": "INFO",
    "short_message": "[request_id=-              ] [logId=qes-1] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.apache.zookeeper.ZooKeeper                              ] [method=logEnv                        ] Client environment:java.library.path=/usr/lib/jvm/java-17-openjdk/lib/server:/usr/lib/jvm/java-17-openjdk/lib:/usr/lib/jvm/java-17-openjdk/../lib:/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib",
    "parsed": "true"
  },
  {
    "logId": "qes-2",
    "business_identifiers": "-",
    "class": "org.apache.curator.utils.Compatibility",
    "container": "fake-container",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "original_log": "[2024-06-17T15:58:02.771][INFO ] [request_id=-              ] [logId=qes-2][tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=ain-EventThread] [class=org.apache.curator.utils.Compatibility                      ] [method=\u003cclinit\u003e                      ] Using org.apache.zookeeper.server.quorum.MultipleAddresses",
    "method": "\u003cclinit\u003e",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "originating_bi_id": "-",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "ain-EventThread",
    "time": "2024-06-17T15:58:02.771007468Z",
    "traceId": "-",
    "version": "v1",
    "date": "2024-06-17T15:58:02.771",
    "source_level": "INFO",
    "short_message": "[request_id=-              ] [logId=qes-2][tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=ain-EventThread] [class=org.apache.curator.utils.Compatibility                      ] [method=<clinit>                      ] Using org.apache.zookeeper.server.quorum.MultipleAddresses",
    "parsed": "true"
  },
  {
    "logId": "qes-3",
    "business_identifiers": "-",
    "class": "org.apache.curator.framework.imps.EnsembleTracker",
    "container": "fake-container",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "original_log": "[2024-06-17T15:58:02.772][INFO ] [request_id=-              ] [logId=qes-3] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=ain-EventThread] [class=org.apache.curator.framework.imps.EnsembleTracker           ] [method=processConfigData             ] New config event received: {server.2=zookeeper-2.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, server.1=zookeeper-1.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, server.3=zookeeper-3.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, version=0}",
    "method": "processConfigData",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "originating_bi_id": "-",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "ain-EventThread",
    "time": "2024-06-17T15:58:02.772007468Z",
    "traceId": "-",
    "version": "v1",
    "date": "2024-06-17T15:58:02.772",
    "source_level": "INFO",
    "short_message": "[request_id=-              ] [logId=qes-3] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=ain-EventThread] [class=org.apache.curator.framework.imps.EnsembleTracker           ] [method=processConfigData             ] New config event received: {server.2=zookeeper-2.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, server.1=zookeeper-1.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, server.3=zookeeper-3.zookeeper-server.zookeeper:2888:3888:participant;0.0.0.0:2181, version=0}",
    "parsed": "true"
  },
  {
    "logId": "qes-4",
    "business_identifiers": "-",
    "class": "org.springframework.core.annotation.AnnotationTypeMapping",
    "container": "fake-container",
    "hostname": "fake-fluent",
    "labels": {
      "metadata.app": "fluent-pipeline-test",
      "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "warning",
    "original_log": "[2024-06-17T15:58:04.045][WARN ] [request_id=-              ] [logId=qes-4] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.springframework.core.annotation.AnnotationTypeMapping   ] [method=addConventionMappings         ] Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @org.axonframework.eventhandling.EventHandler with appropriate @AliasFor declarations: [payloadType]",
    "method": "addConventionMappings",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "originating_bi_id": "-",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:58:04.045007468Z",
    "traceId": "-",
    "version": "v1",
    "short_message": "[request_id=-              ] [logId=qes-4] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.springframework.core.annotation.AnnotationTypeMapping   ] [method=addConventionMappings         ] Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @org.axonframework.eventhandling.EventHandler with appropriate @AliasFor declarations: [payloadType]",
    "parsed": "true",
    "source_level": "WARN",
    "date": "2024-06-17T15:58:04.045"
  },
  {
    "business_identifiers": "-",
    "class": "org.springframework.cloud.context.scope.GenericScope",
    "container": "fake-container",
    "date": "2024-06-17T15:58:24.426",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-5",
    "method": "setSerializationId",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-17T15:58:24.426][INFO ] [request_id=-              ] [logId=qes-5] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.springframework.cloud.context.scope.GenericScope        ] [method=setSerializationId            ] BeanFactory id=00000000-0000-0000-0000-000000000000",
    "originating_bi_id": "-",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "short_message": "[request_id=-              ] [logId=qes-5] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=org.springframework.cloud.context.scope.GenericScope        ] [method=setSerializationId            ] BeanFactory id=00000000-0000-0000-0000-000000000000",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:58:24.426007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "-",
    "class": "o.s.amqp.rabbit.connection.CachingConnectionFactory",
    "container": "fake-container",
    "date": "2024-06-17T15:58:50.440",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "warning",
    "logId": "qes-6",
    "method": "<init>",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-17T15:58:50.440][WARN ] [request_id=-              ] [logId=qes-6] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=o.s.amqp.rabbit.connection.CachingConnectionFactory         ] [method=<init>                        ] ***\nAutomatic Recovery was Enabled in the provided connection factory;\nwhile Spring AMQP is generally compatible with this feature, there\nare some corner cases where problems arise. Spring AMQP\nprefers to use its own recovery mechanisms; when this option is true, you may receive\n'AutoRecoverConnectionNotCurrentlyOpenException's until the connection is recovered.\nIt has therefore been disabled; if you really wish to enable it, use\n'getRabbitConnectionFactory().setAutomaticRecoveryEnabled(true)',\nbut this is discouraged.",
    "originating_bi_id": "-",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "short_message": "[request_id=-              ] [logId=qes-6] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=o.s.amqp.rabbit.connection.CachingConnectionFactory         ] [method=<init>                        ] ***\nAutomatic Recovery was Enabled in the provided connection factory;\nwhile Spring AMQP is generally compatible with this feature, there\nare some corner cases where problems arise. Spring AMQP\nprefers to use its own recovery mechanisms; when this option is true, you may receive\n'AutoRecoverConnectionNotCurrentlyOpenException's until the connection is recovered.\nIt has therefore been disabled; if you really wish to enable it, use\n'getRabbitConnectionFactory().setAutomaticRecoveryEnabled(true)',\nbut this is discouraged.",
    "source_level": "WARN",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:58:50.440007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "-",
    "class": "o.springframework.security.web.DefaultSecurityFilterChain",
    "container": "fake-container",
    "date": "2024-06-17T15:59:10.376",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-7",
    "method": "\u003cinit\u003e",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-17T15:59:10.376][INFO ] [request_id=-              ] [logId=qes-7] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=o.springframework.security.web.DefaultSecurityFilterChain   ] [method=\u003cinit\u003e                        ] Will secure any request with [org.qubership.cloud.context.propagation.spring.common.filter.SpringPreAuthnContextProviderFilter@79d49790, org.springframework.security.web.session.DisableEncodeUrlFilter@5b8599c7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31e9d94f, org.springframework.security.web.context.SecurityContextHolderFilter@70940cb8, org.springframework.security.web.header.HeaderWriterFilter@205b73d8, org.springframework.security.web.authentication.logout.LogoutFilter@1b868ef0, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@6c9b6332, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3810806c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bd7c4cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69a3944, org.springframework.security.web.session.SessionManagementFilter@1ee52741, org.springframework.security.web.access.ExceptionTranslationFilter@10f192d8, org.qubership.cloud.context.propagation.spring.common.filter.SpringPostAuthnContextProviderFilter@7f2ca6f8, org.springframework.security.web.access.intercept.AuthorizationFilter@17541204] ",
    "originating_bi_id": "-",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "short_message": "[request_id=-              ] [logId=qes-7] [tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=o.springframework.security.web.DefaultSecurityFilterChain   ] [method=<init>                        ] Will secure any request with [org.qubership.cloud.context.propagation.spring.common.filter.SpringPreAuthnContextProviderFilter@79d49790, org.springframework.security.web.session.DisableEncodeUrlFilter@5b8599c7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31e9d94f, org.springframework.security.web.context.SecurityContextHolderFilter@70940cb8, org.springframework.security.web.header.HeaderWriterFilter@205b73d8, org.springframework.security.web.authentication.logout.LogoutFilter@1b868ef0, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@6c9b6332, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3810806c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bd7c4cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69a3944, org.springframework.security.web.session.SessionManagementFilter@1ee52741, org.springframework.security.web.access.ExceptionTranslationFilter@10f192d8, org.qubership.cloud.context.propagation.spring.common.filter.SpringPostAuthnContextProviderFilter@7f2ca6f8, org.springframework.security.web.access.intercept.AuthorizationFilter@17541204] ",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:59:10.376007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "-",
    "class": "c.datastax.oss.driver.internal.core.DefaultMavenCoordinates",
    "container": "fake-container",
    "date": "2024-06-17T15:59:12.462",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-8",
    "method": "buildFromResourceAndPrint",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-17T15:59:12.462][INFO ] [request_id=-              ][logId=qes-8][tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=c.datastax.oss.driver.internal.core.DefaultMavenCoordinates ] [method=buildFromResourceAndPrint     ] DataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.15.0",
    "originating_bi_id": "-",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "-",
    "short_message": "[request_id=-              ][logId=qes-8][tenant_id=-                                   ] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers=-               ] [thread=main           ] [class=c.datastax.oss.driver.internal.core.DefaultMavenCoordinates ] [method=buildFromResourceAndPrint     ] DataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.15.0",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "-",
    "thread": "main",
    "time": "2024-06-17T15:59:12.462007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "{quote_id=00000000-0000-0000-0000-000000000000}",
    "class": "c.n.s.tst.plugin.quotation.TstQuotePostCommandModificator",
    "container": "fake-container",
    "date": "2024-06-18T17:28:04.014",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-9",
    "method": "modifyQuote",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-18T17:28:04.014][INFO ] [request_id=465a8dcdc05a30e74c8ed9c7d66aa4a6] [logId=qes-9][tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers={quote_id=00000000-0000-0000-0000-000000000000}] [thread=0.0-8080-exec-5] [class=c.n.s.tst.plugin.quotation.TstQuotePostCommandModificator   ] [method=modifyQuote                   ] [EP-0103] Starting EP Execution",
    "originating_bi_id": "-",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "465a8dcdc05a30e74c8ed9c7d66aa4a6",
    "short_message": "[request_id=465a8dcdc05a30e74c8ed9c7d66aa4a6] [logId=qes-9][tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=-               ] [business_identifiers={quote_id=00000000-0000-0000-0000-000000000000}] [thread=0.0-8080-exec-5] [class=c.n.s.tst.plugin.quotation.TstQuotePostCommandModificator   ] [method=modifyQuote                   ] [EP-0103] Starting EP Execution",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "00000000-0000-0000-0000-000000000000",
    "thread": "0.0-8080-exec-5",
    "time": "2024-06-18T17:28:04.014007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "-",
    "class": "c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController",
    "container": "fake-container",
    "date": "2024-06-18T17:28:06.867",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-10",
    "method": "graphql",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-18T17:28:06.867][INFO ] [request_id=9becf266dd03e52ccc80369bf1921029] [logId=qes-10] [tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers=-               ] [thread=0.0-8080-exec-6] [class=c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController  ] [method=graphql                       ] Start GraphQL Query processing",
    "originating_bi_id": "00000000-0000-0000-0000-000000000000",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "9becf266dd03e52ccc80369bf1921029",
    "short_message": "[request_id=9becf266dd03e52ccc80369bf1921029] [logId=qes-10] [tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers=-               ] [thread=0.0-8080-exec-6] [class=c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController  ] [method=graphql                       ] Start GraphQL Query processing",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "00000000-0000-0000-0000-000000000000",
    "thread": "0.0-8080-exec-6",
    "time": "2024-06-18T17:28:06.867007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "{quote_id=00000000-0000-0000-0000-000000000000}",
    "class": "c.n.c.crm.quotation.engine.app.web.logging.LoggingHandler",
    "container": "fake-container",
    "date": "2024-06-18T17:28:06.873",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-11",
    "method": "logAfterApi",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-18T17:28:06.873][INFO ] [request_id=9becf266dd03e52ccc80369bf1921029][logId=qes-11] [tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers={quote_id=00000000-0000-0000-0000-000000000000}] [thread=0.0-8080-exec-6] [class=c.n.c.crm.quotation.engine.app.web.logging.LoggingHandler   ] [method=logAfterApi                   ] org.qubership.cloud.crm.quotation.engine.app.web.pub.graphql.controller.GraphQLController.graphql()",
    "originating_bi_id": "00000000-0000-0000-0000-000000000000",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "9becf266dd03e52ccc80369bf1921029",
    "short_message": "[request_id=9becf266dd03e52ccc80369bf1921029][logId=qes-11] [tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers={quote_id=00000000-0000-0000-0000-000000000000}] [thread=0.0-8080-exec-6] [class=c.n.c.crm.quotation.engine.app.web.logging.LoggingHandler   ] [method=logAfterApi                   ] org.qubership.cloud.crm.quotation.engine.app.web.pub.graphql.controller.GraphQLController.graphql()",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "00000000-0000-0000-0000-000000000000",
    "thread": "0.0-8080-exec-6",
    "time": "2024-06-18T17:28:06.873007468Z",
    "traceId": "-",
    "version": "v1"
  },
  {
    "business_identifiers": "-",
    "class": "c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController",
    "container": "fake-container",
    "date": "2024-06-18T17:28:07.414",
    "hostname": "fake-fluent",
    "labels": {
        "metadata.app": "fluent-pipeline-test",
        "metadata.app.kubernetes.io/version": "0.1.0"
    },
    "level": "info",
    "logId": "qes-12",
    "method": "graphql",
    "namespace": "fake-namespace",
    "nodename": "fake-node",
    "original_log": "[2024-06-18T17:28:07.414][INFO ] [request_id=ff17deddbb17f5b0da468a87107b9a49][logId=qes-12][tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers=-               ] [thread=0.0-8080-exec-9] [class=c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController  ] [method=graphql                       ] Start GraphQL Query processing",
    "originating_bi_id": "00000000-0000-0000-0000-000000000000",
    "parsed": "true",
    "pod": "fake-fluent-577d48c6cb-4gfmp",
    "request_id": "ff17deddbb17f5b0da468a87107b9a49",
    "short_message": "[request_id=ff17deddbb17f5b0da468a87107b9a49][logId=qes-12][tenant_id=00000000-0000-0000-0000-000000000000] [version=v1] [traceId=-               ] [spanId=-               ] [originating_bi_id=00000000-0000-0000-0000-000000000000] [business_identifiers=-               ] [thread=0.0-8080-exec-9] [class=c.n.c.c.q.e.a.web.pub.graphql.controller.GraphQLController  ] [method=graphql                       ] Start GraphQL Query processing",
    "source_level": "INFO",
    "spanId": "-",
    "tenant_id": "00000000-0000-0000-0000-000000000000",
    "thread": "0.0-8080-exec-9",
    "time": "2024-06-18T17:28:07.414007468Z",
    "traceId": "-",
    "version": "v1"
  }
]